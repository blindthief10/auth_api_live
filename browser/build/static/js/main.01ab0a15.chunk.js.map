{"version":3,"sources":["auth.js","redux.js","components/form.js","components/hobbies.js","components/profile.js","components/UserPage.js","App.js","serviceWorker.js","index.js"],"names":["auth","Auth","Object","classCallCheck","this","isAuth","initialState","userNameValue","passwordValue","loginRedirection","userInfo","hasFailed","goHome","tempHobby","imageSource","store","createStore","state","arguments","length","undefined","action","copyState","objectSpread","type","userData","ev","target","value","hobbies","hobbiesPayload","imageName","payload","getAttribute","applyMiddleware","thunk","LoginForm","handleSubmit","preventDefault","_this","props","makeRequest","userName","password","react_default","a","createElement","Fragment","className","onSubmit","onChange","handleChange","react_router","to","Component","LoginFormContainer","connect","dispatch","credentials","fetch","method","mode","headers","Content-Type","body","JSON","stringify","then","res","status","Error","json","console","log","login","requestAction","catch","err","warn","loginFetch","Hobbies","pushHobby","map","hobby","index","key","changeHobby","HobbiesContainer","changeHobbyAction","hobbyValue","data","pushHobbyFunction","Profile","getImage","src","style","width","height","ProfileContainer","imageData","Protected","isAuthenticated","component","UserPage","NavList","react_router_dom","onClick","logout","NavListContainer","msgData","WelcomeComponent","uploadImage","executeImageFromProps","refs","fileInput","files","ref","exact","path","WelcomeComponentContainer","file","formData","FormData","append","msg","makeUploadFetch","App","Boolean","window","location","hostname","match","ReactDOM","render","react_redux_es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01ab0a15.chunk.js","sourcesContent":["class Auth {\r\n  constructor() {\r\n    this.isAuth = false;\r\n  }\r\n\r\n  login() {\r\n    this.isAuth = true;\r\n  }\r\n\r\n  logout() {\r\n    this.isAuth = false;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.isAuth;\r\n  }\r\n}\r\n\r\nexport default new Auth();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk  from 'redux-thunk';\r\nimport Auth from './auth';\r\n\r\nconst initialState = {\r\n  userNameValue: '',\r\n  passwordValue: '',\r\n  loginRedirection: false,\r\n  userInfo: null,\r\n  hasFailed: false,\r\n  goHome: false,\r\n  tempHobby: '',\r\n  imageSource: 'https://media.istockphoto.com/photos/closeup-of-mixedbreed-monkey-between-chimpanzee-and-bonobo-smiling-picture-id507714936?k=6&m=507714936&s=612x612&w=0&h=X_r4XsnwHNZf3wSzXeTYvC6DelESliAsDus4EiSXXu0='\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n  const copyState = {...state};\r\n\r\n  switch(action.type) {\r\n\r\n    case 'HAS_FAILED':\r\n      return {...copyState, hasFailed: true};\r\n\r\n    case 'REDIRECT_HOME':\r\n      return {...copyState, loginRedirection: false, goHome: true};\r\n\r\n    case 'FETCH_DATA':\r\n      return {...copyState, userInfo: action.userData};\r\n\r\n    case 'REDIRECT_LOGIN':\r\n      return {...copyState, loginRedirection: true, goHome: false};\r\n\r\n    case 'CHANGE_TEMP_HOBBY':\r\n      return {...copyState, tempHobby: action.ev.target.value};\r\n\r\n    case 'UPDATE_HOBBIES':\r\n      return {...copyState, userInfo: {hobbies: action.hobbiesPayload}};\r\n\r\n    case 'REFRESH_IMAGE':\r\n      return {...copyState, imageSource: '../uploadedImages/' + action.imageName}\r\n\r\n    case 'CHANGE':\r\n      if (action.payload.target.getAttribute('type') === 'text') {\r\n        copyState.userNameValue = action.payload.target.value;\r\n      } else if (action.payload.target.getAttribute('type') === 'password') {\r\n        copyState.passwordValue = action.payload.target.value;\r\n      }\r\n      return copyState;\r\n\r\n    default:\r\n      return copyState;\r\n  }\r\n}\r\n\r\nconst hasFailedAction = () => {\r\n  return { type: 'HAS_FAILED' }\r\n}\r\n\r\nexport const changeAction = payload => {\r\n  return { type: 'CHANGE', payload: payload }\r\n}\r\n\r\nexport const requestAction = userData => {\r\n  return { type: 'FETCH_DATA', userData: userData }\r\n}\r\n\r\nconst redirectToLogin = () => {\r\n  return { type: 'REDIRECT_LOGIN' }\r\n}\r\n\r\nexport const changeHobbyAction = ev => {\r\n  return { type: 'CHANGE_TEMP_HOBBY', ev: ev }\r\n}\r\n\r\nconst redirectToHome = () => {\r\n  return { type: 'REDIRECT_HOME' }\r\n}\r\n\r\nconst pushHobbyAction = hobbiesPayload => {\r\n  return { type: 'UPDATE_HOBBIES', hobbiesPayload: hobbiesPayload }\r\n}\r\n\r\nconst refreshImage = imageName => {\r\n  return { type: 'REFRESH_IMAGE', imageName: imageName };\r\n}\r\n\r\nexport const makeUploadFetch = file => {\r\n  return function(dispatch) {\r\n\r\n    const formData = new FormData();\r\n    formData.append('profile', file);\r\n\r\n    fetch('/images/upload', {\r\n      method: 'post',\r\n      body: formData\r\n    })\r\n    .then(res => {\r\n      if (res.status === 400 || res.status === 404) {\r\n        throw new Error('An error occured. Uploading failed')\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(msg => console.log(msg))\r\n    .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const fetchImage = () => {\r\n  return function(dispatch) {\r\n    fetch('/images/profile')\r\n    .then(res => {\r\n      if (res.status >= 400 && res.status < 500) {\r\n        throw new Error('Could not fetch');\r\n      }\r\n\r\n      return res.json();\r\n    })\r\n    .then(imageData => {\r\n      console.log(imageData);\r\n      dispatch(refreshImage(imageData.imageName));\r\n    })\r\n    .catch(err => console.warn(err))\r\n  }\r\n}\r\n\r\nexport const loginFetch = credentials => {\r\n  return function(dispatch) {\r\n    fetch('/users/login', {\r\n      method: 'post',\r\n      mode: 'cors',\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify(credentials)\r\n    })\r\n    .then(res => {\r\n      if (res.status === 400 || res.status === 404) {\r\n        throw new Error('Authentication failed');\r\n      }\r\n\r\n      return res.json();\r\n    })\r\n    .then(userData => {\r\n      console.log(userData);\r\n      Auth.login();\r\n      dispatch(requestAction(userData));\r\n      dispatch(redirectToLogin());\r\n    })\r\n    .catch(err => {\r\n      console.warn(err);\r\n      dispatch(hasFailedAction());\r\n    })\r\n  }\r\n}\r\n\r\nexport const reduxLogout = () => {\r\n  return function(dispatch) {\r\n    fetch('/users/logout')\r\n      .then(res => {\r\n        if (res.status === 400 || res.status === 404) {\r\n          throw new Error('Log out failed');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(msgData => {\r\n        console.log(msgData);\r\n        dispatch(redirectToHome());\r\n      })\r\n      .catch(err => console.warn(err))\r\n  }\r\n}\r\n\r\nexport const pushHobbyFunction = hobbyValue => {\r\n  return function(dispatch) {\r\n    fetch('/users/update/hobbies', {\r\n      method: 'put',\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({hobbies: hobbyValue})\r\n    })\r\n    .then(res => {\r\n      return res.json()\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n      dispatch(pushHobbyAction(data.hobbies));\r\n    })\r\n    .catch(err => console.warn(err))\r\n  }\r\n}\r\n\r\nexport const store = createStore(authReducer, applyMiddleware(thunk));\r\n","import React, { Component } from 'react';\r\nimport {  changeAction, loginFetch } from '../redux';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginForm extends Component {\r\n\r\n  handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    this.props.makeRequest({userName: this.props.userNameValue, password: this.props.passwordValue});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <form className=\"text-center\" onSubmit={this.handleSubmit}>\r\n        <div className=\"input-group mb-3 input-group-lg\">\r\n           <div className=\"input-group-prepend\">\r\n             <span className=\"input-group-text\">Username</span>\r\n          </div>\r\n          <input onChange={this.props.handleChange} type=\"text\" className=\"form-control\" value={this.props.userNameValue} />\r\n        </div>\r\n        <div className=\"input-group mb-3 input-group-lg\">\r\n           <div className=\"input-group-prepend\">\r\n             <span className=\"input-group-text\">Password</span>\r\n          </div>\r\n          <input onChange={this.props.handleChange} type=\"password\" className=\"form-control\" value={this.props.passwordValue}/>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary btn-lg\">Log in</button>\r\n      </form>\r\n      {this.props.hasFailed && <div className=\"alert alert-danger my-4\">Either username or password was incorrect. Try again!</div>}\r\n      {this.props.loginRedirection && <Redirect to='/user' />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userNameValue: state.userNameValue,\r\n    passwordValue: state.passwordValue,\r\n    loginRedirection: state.loginRedirection,\r\n    hasFailed: state.hasFailed\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleChange: ev => dispatch(changeAction(ev)),\r\n    makeRequest: credentials => dispatch(loginFetch(credentials))\r\n  }\r\n}\r\n\r\nexport const LoginFormContainer = connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeHobbyAction, pushHobbyFunction } from '../redux';\r\n\r\nclass Hobbies extends Component {\r\n\r\n  pushHobby = ev => {\r\n    ev.preventDefault();\r\n    this.props.pushHobby(this.props.tempHobby);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3 className=\"title my-5 text-dark\">Your hobbies are: </h3>\r\n        <ul className=\"nav flex-column mb-5\">\r\n          {this.props.hobbies.map((hobby, index) => {\r\n            return <li key={index} className=\"nav-item\">{index + 1}. {hobby}</li>;\r\n          })}\r\n        </ul>\r\n        <form className=\"text-center\" onSubmit={this.pushHobby}>\r\n          <div className=\"input-group mb-3 input-group-lg\">\r\n             <div className=\"input-group-prepend\">\r\n               <span className=\"input-group-text\">Create a hobby</span>\r\n            </div>\r\n            <input onChange={this.props.changeHobby} type=\"text\" className=\"form-control\" value={this.props.tempHobby} />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-success btn-lg\">Push new hobby</button>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    hobbies: state.userInfo.hobbies,\r\n    tempHobby: state.tempHobby\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeHobby: ev => dispatch(changeHobbyAction(ev)),\r\n    pushHobby: hobbyValue => dispatch(pushHobbyFunction(hobbyValue))\r\n  }\r\n}\r\n\r\nexport const HobbiesContainer = connect(mapStateToProps, mapDispatchToProps)(Hobbies);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchImage } from '../redux';\r\n\r\nclass Profile extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getImage();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <img src={this.props.imageSource} style={{width: '50%', height: '20vw'}}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    imageSource: state.imageSource\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getImage: () => dispatch(fetchImage())\r\n  }\r\n}\r\n\r\nexport const ProfileContainer = connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect, NavLink } from 'react-router-dom';\r\nimport Auth from '../auth';\r\nimport { connect } from 'react-redux';\r\nimport { reduxLogout, makeUploadFetch } from '../redux';\r\nimport { HobbiesContainer } from './hobbies';\r\nimport { ProfileContainer } from './profile';\r\n\r\nexport default class Protected extends Component {\r\n  render() {\r\n    if (Auth.isAuthenticated()) {\r\n      return <Route component={UserPage} />\r\n    } else {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  }\r\n}\r\n\r\nclass NavList extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/user\">Home</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/user/hobbies\">Hobbies</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/user/profile\">Profile</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <button onClick={this.props.logout} className=\"btn btn-danger btn-sm\">Logout</button>\r\n          </li>\r\n        </ul>\r\n        {this.props.goHome && <Redirect to=\"/\" />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapNavListPropsToState = state => {\r\n  return {\r\n    goHome: state.goHome\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(reduxLogout())\r\n  }\r\n}\r\n\r\nconst NavListContainer = connect(mapNavListPropsToState, mapDispatchToProps)(NavList);\r\n\r\n\r\nclass WelcomeComponent extends Component {\r\n\r\n\r\n  uploadImage = ev => {\r\n    ev.preventDefault();\r\n    this.props.executeImageFromProps(this.refs.fileInput.files[0])\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2 className=\"title text-center mt-5\">Hello {this.props.userInfo.userName}</h2>\r\n        <form className=\"text-center\" onSubmit={this.uploadImage}>\r\n          <div className=\"input-group mb-3 input-group-lg\">\r\n             <div className=\"input-group-prepend\">\r\n               <span className=\"input-group-text\">Select</span>\r\n            </div>\r\n            <input ref=\"fileInput\" type=\"file\" className=\"btn btn-warning\" />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-success btn-lg\">Upload Image</button>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass UserPage extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavListContainer />\r\n        <Route exact path=\"/user\" component={WelcomeComponentContainer} />\r\n        <Route path=\"/user/hobbies\" component={HobbiesContainer} />\r\n        <Route path=\"/user/profile\" component={ProfileContainer} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userInfo: state.userInfo\r\n  }\r\n}\r\n\r\nconst mapUploadDispatchToProps = dispatch => {\r\n  return {\r\n    executeImageFromProps: file => dispatch(makeUploadFetch(file))\r\n  }\r\n}\r\n\r\nconst WelcomeComponentContainer = connect(mapStateToProps, mapUploadDispatchToProps)(WelcomeComponent);\r\n","import React, { Component } from 'react';\r\nimport { LoginFormContainer } from './components/form.js';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Protected from './components/UserPage';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2 className=\"title text-primary text-center my-4\">Welcome to our starting Page</h2>\r\n        <div className=\"container my-4\">\r\n          <div className=\"jumbotron p-5\">\r\n            <BrowserRouter>\r\n              <Route path=\"/\" exact component={LoginFormContainer} />\r\n              <Route path=\"/user\" component={Protected} />\r\n\r\n            </BrowserRouter>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}